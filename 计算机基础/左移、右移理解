## 左移、右移位运算

#### 左移运算符 << 

**定位：**双目运算符；

**功能：**把左移运算符(<<)左边的运算数的各二进制位全部左移若干位，移动的位数由左移运算符右边的数指定，高位舍掉，低位补0



#### 右移运算符 >>

**定位：**双目运算符；

**功能：**把右移运算符(>>)左边的运算数的各二进制位全部右移若干位，移动的位数由右移运算符右边的数指定;

 			 对于有符号数，在右移时，符号位将随同移动：

​			 当有符号数为正数时，最高位补0

​			 当有符号数为负数时，最高位也就是符号位为1，最高位补0或者补1，取决于编译系统。（很多系统规定为补1）



##### 通俗理解：

- 左移将原数乘以2
- 右移将原数除以2

**举例**

​	十进制：100 

​	二进制：00000000 00000000 00000000 01100100 

​	==整型是4字节32位，将100以整型的二进制表示==

------

100 >> 2

二进制： 00000000 00000000 00000000 00011001 | 00
解释： | 后面被剔除，前面缺少的两个补0
结果： 25
==右移两位相当于除以2，再除以2，结果为25==

------

100 << 2
二进制： 00 | 00000000 00000000 00000001 100100 00
解释： | 前面被剔除，后面缺少的两个补0
结果： 400
==左移两位相当于乘以2，再乘以2，结果为400==



#### 总结：

- 负数有符号右移高位补1
- 负数无符号右移高位补0
- 位移是一个取余得过程
- 无符号右移无论正负高位添0
